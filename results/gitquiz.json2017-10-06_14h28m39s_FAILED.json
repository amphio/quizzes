{"Results": {"Unexpected_behaviours": {"Branches represent a reference to a specific commit rather than creating a new copy of another branch. (y/n)": "n", "I just shipped v1.1 and want to create a marker of the state of my branch": "git mark", "Git resolves all conflicts automatically (y/n)": "y", ".gitignore files can be used to ignore commits which haven't been pushed to the remote (y/n)": "y", "The main difference between git and svn is that git tracks differences of files (y/n)": "y", "A developer needs an internet connection to view a project's full history (y/n)": "y", "I want to view my repo's commit history, with each commit on a single line": "git log"}, "Test passed": false}, "actual_responses": {"Git Quiz Part 1 (concepts and theory \u2013 y/n)": {"Git is a Distributed Version Control System (y/n)": "y", "A developer needs an internet connection to view a project's full history (y/n)": "y", "The main difference between git and svn is that git tracks differences of files (y/n)": "y", "Branches represent a reference to a specific commit rather than creating a new copy of another branch. (y/n)": "n", "Cloning a repository doesn't add an automatic connection for fetching and pushing changes (y/n)": "n", "A pull request is mechanism for inspecting and discussing work before it is merged into another branch (y/n)": "y", "A remote stores a URL used to connect to another repository (y/n)": "y", "Git resolves all conflicts automatically (y/n)": "y", "Changes to the working directory need to manually added to the staging area (y/n)": "y", ".gitignore files can be used to ignore commits which haven't been pushed to the remote (y/n)": "y"}, "Git Quiz Part 2 (commands)": {"I want to create a new git repository in the current directory": "git init", "I want to create a local working copy of the repository at git@github.com:robertcromie/skunkworks.git": "git clone git@github.com:robertcromie/skunkworks.git", "I want to compare my working directory to the remote branch": "git status", "I want to stage all my current changes to be committed": "git add .", "I want to commit my changes with a message, without having to open a text editor": "git commit -m", "I want to view my repo's commit history, with each commit on a single line": "git log", "I want to set aside some changes I've made to temporarily work on something else": "git stash", "I just shipped v1.1 and want to create a marker of the state of my branch": "git mark", "I want to reset my staging area and working directory to match the most recent commit": "git reset --hard", "I want to publish my local changes to the central repository": "git push"}}}